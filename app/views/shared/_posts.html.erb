<% if Current.user != nil %>
<% @num = 1 %>
<% @posts.each do |post| %>
  <div class="d-flex flex-column card my-2" style="max-width: 500px;">

    <%# POST HEADERS %>
    <div class="d-flex flex-row  px-3 pt-3" id=header1>
      <img src="<%= id2avatar(post.user_id) %>" width="50" height="50" class="rounded-circle">
      <div class="d-flex flex-column mx-2">
        <h5 class="card-title"><%= id2name(post.user_id) %></h5>
        <p class="text-muted post-card-muted"><%= time_ago_in_words(post.created_at) %> ago</p>
      </div>
    </div>

    <%# POST MESSAGE %>
    <div class="card-body px-3">
      <p class="card-text"><%= "#{post.message}" %></p>
    </div>

    <%# POST IMAGE %>
    <img src="<%= post.image_url %>" class="img-fluid" >

    <%# LIKE AND COMMENT BUTTONS %>
    <div class="class-body post-buttons py-1">
      <button class="like-button post-action-buttons" id="likeButton" name="<%=post.id%>" >
        <input type="hidden" id="getUserID" value=" <%= Current.user.id %>">
        <i class="bi bi-hand-thumbs-up-fill"></i>
      </button>
      <div id="<%=post.id%>">
        <% like_count = 0 %>
        <% (@likes.where(post_id: post.id)).each do |obj| %>
        <% like_count += 1 %>
        <% end %> 
        <%=like_count%> 
      </div>
      <button class="post-action-buttons" type="button" data-bs-toggle="collapse" data-bs-target="#<%= "collapseComment#{@num}"%>" aria-expanded="false" aria-controls="<%= "collapseComment#{@num}"%>">
        <i class="bi bi-chat-right-fill"></i>
      </button>
    </div>


    <%# NEW COMMENT FORM %>
        <div class="card-body d-flex flex-row p-2" id="makeANewComment">
          <%= image_tag default_avatar(Current.user.image_url), :style =>  'width: 45px', :style =>  'height: 45px', :class => 'nav-avatar'%>
          <div class="d-flex flex-column w-100 mx-1">

              <input type="hidden" id="getFirstName" value="<%= Current.user.first_name %>">
              <input type="hidden" id="getLastName" value="<%= Current.user.last_name %>">
              <input type="hidden" id="getPostId" value="<%= post.id %>">
              <input type="string" class="w-100 form-control" id="commentContent" name="<%= post.id %>">

            <p class="m-0"><small class="text-muted">Press enter to comment</small></p>
          </div>
        </div>
        </div>

      <%# SHOW COMMENTS ON THIS POST %>
        <div id="<%=post.id%>">
        <% post.comments.reverse.each do |comment| %>
          <div class="card-body d-flex flex-row py-1 px-1" >
              <img src="<%= id2avatar(comment.user_id) %>" width="35" height="35" class="rounded-circle" id="avatar" >
              <div>
                <div>
                  <p class="post-comment-display mx-2 p-2">
                    <% find_user_id = comment.user_id %>
                    <% find_user = User.find_by(id: find_user_id) %>
                    <small class="fw-bold comment-title"><%= "#{find_user[:first_name]} #{find_user[:last_name]}" %> </small>
                    <small class="comment-content"><%= comment.message %></small>
                    </p>
                  <font size="1"><%= time_ago_in_words(comment.created_at) %> ago</font>
                </div>
              </div>
          </div>
        <%end%>
      </div>

      <% @num += 1 %>
    <% end %>
  <% end %>


<script type="text/javascript">

  //Dynamic likes

// need likeState to be determined by a fetch request of whether the current
// user has liked the post or not. need to have a like state for each like button

document.querySelectorAll("#likeButton").forEach(element => {
  let likeState = false 
  // fetch request to find out of button has been liked by current user
  element.addEventListener("click", ()=>{
    if (likeState == false ){
      let likeData = {"like" : {"post_id": element.name }}
      fetch("http://localhost:3000/likes", {
      method: "POST",
      headers: {
      "Content-Type" : "application/json",
    }, 
    body: JSON.stringify(likeData)
  }).then(() => {
    likeState = true 
    let count = document.getElementById(element.name)
    newCount = parseInt(count.innerText)
    count.innerText = `${newCount += 1}`
  })
}

  else if (likeState == true) {
    let getUserID = document.getElementById("getUserID")
    let deleteData = {"like" : {"post_id": element.name, "user_id" : getUserID.value }}
    fetch(`http://localhost:3000/delete_like/`, {
      method: "DELETE",
      headers: {
      "Content-Type" : "application/json",
    }, 
    body: JSON.stringify(deleteData)
  }).then(() => {
    likeState = false
    let count = document.getElementById(element.name)
    newCount = parseInt(count.innerText)
    count.innerText = `${newCount -= 1}`
  })

}
})
})

</script>

<script>

  //Dynamic comments

let getFirstName = document.getElementById("getFirstName")
let getLastName = document.getElementById("getLastName")
let userName = `${getFirstName.value} ${getLastName.value}`


 document.querySelectorAll("#commentContent").forEach(element => {
   element.addEventListener("keypress", (e) => {
     if(e.key == "Enter"){
      let data = {"comment": {"post_id": element.name, "message": element.value}}
      fetch("http://localhost:3000/comments", {
      method: "POST",
      headers: {
        "Content-Type" : "application/json",
      }, 
      body: JSON.stringify(data)
    })
    .then(() => {
    let div2 = document.createElement("Div")
    let img = document.getElementById("avatar")
    let cloneImg = img.cloneNode(true)
    div2.appendChild(cloneImg)
    let div3 = document.createElement("Div")
    let p = document.createElement("p")
    p.className = "post-comment-display mx-2 p-2"
    let nameDisplay = document.createElement("small")
    nameDisplay.className = "fw-bold comment-title"
    nameDisplay.innerText = userName
    let contentDisplay = document.createElement("small")
    contentDisplay.className = "comment-content"
    contentDisplay.innerText = element.value
    p.appendChild(nameDisplay)
    p.appendChild(contentDisplay)
    div3.appendChild(p)
    let emptyDiv = document.createElement('div')
    emptyDiv.appendChild(div3)
    div2.appendChild(emptyDiv)
    let card = document.createElement("div")
    card.className = "card-body d-flex flex-row py-1 px-1"
    card.appendChild(div2)
    let blah = document.getElementById(`${element.name}`)
    blah.prepend(card)
    })
  }
 })
})

</script>
